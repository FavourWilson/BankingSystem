// <auto-generated />
using System;
using Banking.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Banking.Services.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Banking.Model.Account_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<int?>("BalanceId")
                        .HasColumnType("int");

                    b.Property<int?>("Customer_DetailsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.HasIndex("Customer_DetailsId");

                    b.ToTable("accountDetails");
                });

            modelBuilder.Entity("Banking.Model.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountBalance")
                        .HasColumnType("float");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransactionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransactionsId");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("Banking.Model.Customer_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextOfKin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("customerDetails");
                });

            modelBuilder.Entity("Banking.Model.Deposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BalanceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepositDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Depositor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransactionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.HasIndex("TransactionsId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("Banking.Model.Transactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("RecievedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SentTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalTransaction")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Banking.Model.Withdrawals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BalanceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepositDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransactionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.HasIndex("TransactionsId");

                    b.ToTable("Withdrawals");
                });

            modelBuilder.Entity("Banking.Model.Account_Details", b =>
                {
                    b.HasOne("Banking.Model.Balance", null)
                        .WithMany("Account_Details")
                        .HasForeignKey("BalanceId");

                    b.HasOne("Banking.Model.Customer_Details", null)
                        .WithMany("Account_Details")
                        .HasForeignKey("Customer_DetailsId");
                });

            modelBuilder.Entity("Banking.Model.Balance", b =>
                {
                    b.HasOne("Banking.Model.Transactions", null)
                        .WithMany("Balances")
                        .HasForeignKey("TransactionsId");
                });

            modelBuilder.Entity("Banking.Model.Deposit", b =>
                {
                    b.HasOne("Banking.Model.Balance", null)
                        .WithMany("Deposits")
                        .HasForeignKey("BalanceId");

                    b.HasOne("Banking.Model.Transactions", null)
                        .WithMany("Deposits")
                        .HasForeignKey("TransactionsId");
                });

            modelBuilder.Entity("Banking.Model.Withdrawals", b =>
                {
                    b.HasOne("Banking.Model.Balance", null)
                        .WithMany("Withdrawals")
                        .HasForeignKey("BalanceId");

                    b.HasOne("Banking.Model.Transactions", null)
                        .WithMany("Withdrawals")
                        .HasForeignKey("TransactionsId");
                });

            modelBuilder.Entity("Banking.Model.Balance", b =>
                {
                    b.Navigation("Account_Details");

                    b.Navigation("Deposits");

                    b.Navigation("Withdrawals");
                });

            modelBuilder.Entity("Banking.Model.Customer_Details", b =>
                {
                    b.Navigation("Account_Details");
                });

            modelBuilder.Entity("Banking.Model.Transactions", b =>
                {
                    b.Navigation("Balances");

                    b.Navigation("Deposits");

                    b.Navigation("Withdrawals");
                });
#pragma warning restore 612, 618
        }
    }
}
